{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactdeveloper\\\\reactcoding\\\\example-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\n\n// const Body = () => {\n//     const language = ['React', 'JavaScript', 'Java', 'Servlet', 'SQL'];\n//     return (\n//         <>\n//             <h1>우리가 배운 프로그래밍</h1>\n//             <ul style={\n//                 { \n//                     listStyleType: 'none',\n//                     color: 'pink',\n//                 }\n//             }>\n//                 {language.map((lang, index) => (\n//                     <li key={index}>{lang}</li>\n//                 ))}\n//             </ul>\n//         </>\n//     );\n// };\n\n// const Body = ({name, location, favorList = []}) => {\n//     console.log(name, location, favorList);\n//     return (\n//         <div className='body'>\n//             <h1>우리가 배운 프로그래밍</h1>\n//             <ul style={\n//                 { \n//                     listStyleType: 'none',\n//                     color: 'pink',\n//                 }\n//             }>\n//                 {favorList.map((lang, index) => (\n//                     <li key={index}>{lang}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  function handleOnClick(e) {\n    if (e.target.name === '1st') {\n      alert('첫 번째 버튼이 클릭되었습니다.');\n    } else if (e.target.name === '2nd') {\n      alert('두 번째 버튼이 클릭되었습니다.');\n    }\n  }\n  let [count, setCount] = useState(0);\n  const onIncrease = () => {\n    setCount(count + 1);\n  };\n  let [text, setText] = useState(\"\");\n  const onChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uCE74\\uC6B4\\uD2B8: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onIncrease,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"1st\",\n      onClick: handleOnClick,\n      children: \"\\uD074\\uB9AD\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"2nd\",\n      onClick: handleOnClick,\n      children: \"\\uD074\\uB9AD\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"qkUv+0TZGZusj43M06s9VBs6hEU=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Body","_s","handleOnClick","e","target","name","alert","count","setCount","onIncrease","text","setText","onChange","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["C:/reactdeveloper/reactcoding/example-react/src/components/Body.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n// const Body = () => {\r\n//     const language = ['React', 'JavaScript', 'Java', 'Servlet', 'SQL'];\r\n//     return (\r\n//         <>\r\n//             <h1>우리가 배운 프로그래밍</h1>\r\n//             <ul style={\r\n//                 { \r\n//                     listStyleType: 'none',\r\n//                     color: 'pink',\r\n//                 }\r\n//             }>\r\n//                 {language.map((lang, index) => (\r\n//                     <li key={index}>{lang}</li>\r\n//                 ))}\r\n//             </ul>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// const Body = ({name, location, favorList = []}) => {\r\n//     console.log(name, location, favorList);\r\n//     return (\r\n//         <div className='body'>\r\n//             <h1>우리가 배운 프로그래밍</h1>\r\n//             <ul style={\r\n//                 { \r\n//                     listStyleType: 'none',\r\n//                     color: 'pink',\r\n//                 }\r\n//             }>\r\n//                 {favorList.map((lang, index) => (\r\n//                     <li key={index}>{lang}</li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst Body = () =>{\r\n    function handleOnClick(e) {\r\n        if(e.target.name === '1st') {\r\n            alert('첫 번째 버튼이 클릭되었습니다.');\r\n        } else if(e.target.name === '2nd') {\r\n            alert('두 번째 버튼이 클릭되었습니다.');\r\n        }\r\n    }\r\n    let [count, setCount] = useState(0);\r\n    const onIncrease = () => {\r\n        setCount(count + 1);\r\n    }\r\n    let [text, setText] = useState(\"\");\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>카운트: {count}</h2>\r\n            <button onClick={onIncrease}>+</button>\r\n            <br />\r\n            <input type='text' value={text} onChange={onChange} />\r\n            <div>{text}</div>\r\n\r\n            <button name='1st' onClick={handleOnClick}>클릭하세요</button>\r\n            <button name='2nd' onClick={handleOnClick}>클릭하세요</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Body;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,SAASC,aAAaA,CAACC,CAAC,EAAE;IACtB,IAAGA,CAAC,CAACC,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;MACxBC,KAAK,CAAC,mBAAmB,CAAC;IAC9B,CAAC,MAAM,IAAGH,CAAC,CAACC,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;MAC/BC,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EACJ;EACA,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EACD,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMe,QAAQ,GAAIT,CAAC,IAAK;IACpBQ,OAAO,CAACR,CAAC,CAACC,MAAM,CAACS,KAAK,CAAC;EAC3B,CAAC;EAED,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,GAAI,sBAAK,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnB,OAAA;MAAQoB,OAAO,EAAEV,UAAW;MAAAK,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACP,KAAK,EAAEH,IAAK;MAACE,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDnB,OAAA;MAAAe,QAAA,EAAMJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEjBnB,OAAA;MAAQM,IAAI,EAAC,KAAK;MAACc,OAAO,EAAEjB,aAAc;MAAAY,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDnB,OAAA;MAAQM,IAAI,EAAC,KAAK;MAACc,OAAO,EAAEjB,aAAc;MAAAY,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA7BKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}