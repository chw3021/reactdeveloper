{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactdeveloper\\\\reactcoding\\\\example-react\\\\src\\\\notice\\\\NoticeMain.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NoticeForm from \"./NoticeForm\";\nimport styles from './Notice.module.css';\nimport NoticeModal from './NoticeModal';\nimport NoticeList from './NoticeList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoticeMain = () => {\n  _s();\n  const [form, setForm] = useState({\n    title: '',\n    content: '',\n    date: ''\n  });\n  const [notices, setNotices] = useState([]);\n  const [selectedNotice, setSelectedNotice] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleOnChange = e => {\n    const nextForm = {\n      ...form,\n      [e.target.name]: e.target.value\n    };\n    setForm(nextForm);\n  };\n  const onKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleOnClick();\n    }\n  };\n  const handleOnClick = () => {\n    const {\n      title,\n      content,\n      date\n    } = form;\n    if (title.trim() === \"\") {\n      alert(\"제목을 입력해주세요.\");\n      return;\n    }\n    if (content.trim() === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n    const newNotice = {\n      title,\n      content,\n      date\n    };\n    setNotices([...notices, newNotice]);\n    setForm({\n      title: '',\n      content: '',\n      date: ''\n    });\n  };\n  const handleNoticeClick = notice => {\n    setSelectedNotice(notice);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedNotice(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoticeForm, {\n      form: form,\n      handleOnChange: handleOnChange,\n      onKeyPress: onKeyPress,\n      handleOnClick: handleOnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoticeList, {\n      notices: notices,\n      handleNoticeClick: handleNoticeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoticeModal, {\n      isModalOpen: isModalOpen,\n      selectedNotice: selectedNotice,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NoticeMain, \"bY/NKsgS01Knw/yo5Lm0N9fjHog=\");\n_c = NoticeMain;\nvar _c;\n$RefreshReg$(_c, \"NoticeMain\");","map":{"version":3,"names":["React","useState","NoticeForm","styles","NoticeModal","NoticeList","jsxDEV","_jsxDEV","NoticeMain","_s","form","setForm","title","content","date","notices","setNotices","selectedNotice","setSelectedNotice","isModalOpen","setIsModalOpen","handleOnChange","e","nextForm","target","name","value","onKeyPress","key","handleOnClick","trim","alert","newNotice","handleNoticeClick","notice","closeModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/reactdeveloper/reactcoding/example-react/src/notice/NoticeMain.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport NoticeForm from \"./NoticeForm\";\r\nimport styles from './Notice.module.css';\r\nimport NoticeModal from './NoticeModal';\r\nimport NoticeList from './NoticeList';\r\n\r\nconst NoticeMain = () => {\r\n\r\n    const [form, setForm] = useState({\r\n        title: '',\r\n        content: '',\r\n        date: ''\r\n    });\r\n    const [notices, setNotices] = useState([]);\r\n    const [selectedNotice, setSelectedNotice] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleOnChange = e => {\r\n        const nextForm = {\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        };\r\n        setForm(nextForm);\r\n    };\r\n\r\n    const onKeyPress = e => {\r\n        if (e.key === 'Enter') {\r\n            handleOnClick();\r\n        }\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        const { title, content, date } = form;\r\n        if (title.trim() === \"\") {\r\n            alert(\"제목을 입력해주세요.\");\r\n            return;\r\n        }\r\n        if (content.trim() === \"\") {\r\n            alert(\"내용을 입력해주세요.\");\r\n            return;\r\n        }\r\n        const newNotice = { title, content, date };\r\n        setNotices([...notices, newNotice]);\r\n        setForm({ title: '', content: '', date: '' });\r\n    };\r\n\r\n    const handleNoticeClick = (notice) => {\r\n        setSelectedNotice(notice);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 className={styles.title}>공지사항</h1>\r\n            <NoticeForm form={form} handleOnChange={handleOnChange} onKeyPress={onKeyPress} handleOnClick={handleOnClick} />\r\n            <NoticeList notices={notices} handleNoticeClick={handleNoticeClick} />\r\n            <NoticeModal isModalOpen={isModalOpen} selectedNotice={selectedNotice} closeModal={closeModal} />\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}